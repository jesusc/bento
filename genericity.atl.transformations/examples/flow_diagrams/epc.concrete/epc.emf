@namespace(uri="epc", prefix="epc")
package epc;

// Meta-model taken from the thesis from BIG

class EPCDiagram {
   val FlowConnector[*] flows;
   val ProcessObject[*] objects;
   val OrganizationalUnit[*] units;
}

abstract class FlowConnector {}

class ControlFlow extends FlowConnector {
  ref Function[0..1]#outgoing fsource;
  ref Function[0..1]#incoming ftarget;
  ref LogicalOperator[0..1]#outgoing lsource;
  ref LogicalOperator[0..1]#incoming ltarget;
  ref Event[0..1]#outgoing esource;
  ref Event[0..1]#incoming etarget;
}

class OrganizationalFlow extends FlowConnector {
  ref Function[1] target;
  ref OrganizationalUnit[*]#outgoing source;
}

class OrganizationalUnit {
   ref OrganizationalFlow[*]#source outgoing;
}

abstract class ProcessObject{}

abstract class Function extends ProcessObject {
  attr String name;
  ref ControlFlow[1]#fsource outgoing;
  ref ControlFlow[1]#ftarget incoming;
} 

class BasicFunction extends Function{   
}

class ComplexFunction extends Function{
   ref EPCDiagram[*] contents;
}

abstract class LogicalOperator extends ProcessObject {
  ref ControlFlow[*]#lsource outgoing;
  ref ControlFlow[*]#ltarget incoming;
}

class Event extends ProcessObject {
  attr String name;
  ref ControlFlow[*]#esource outgoing;
  ref ControlFlow[*]#etarget incoming;
}

class And extends LogicalOperator{}

class Or extends LogicalOperator{}

class Xor extends LogicalOperator{}
