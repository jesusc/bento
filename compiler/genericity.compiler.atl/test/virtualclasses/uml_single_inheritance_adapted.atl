module uml_single_inheritance;
create OUT : UML from IN : UML;

helper def : generalizationMap : OclAny = UML!Class.allInstances->


rule class2class {
	from umlClass  : UML!Class
	to   outClass :  UML!Class (
		name           <- umlClass.name,	
   	    generalization <- umlClass.superclasses->collect(c | Tuple { general = c } )
		generalization->first()		
	)
}

rule generalization2generalization {
	from gen  : UML!Generalization
	to   outgen :  UML!Generalization (
		general <- gen.general
	)
}
