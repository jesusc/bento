/**
 * Rewrites an ATL transformation according to a binding model.
 */
qool adapt_model_elements(atl, gbind, params) -> ()

model matches
  class MatchedClassBinding
	ref oclModelElement : atl!OclModelElement
	ref classBinding    : gbind!ClassBinding
  end
end

// rt model for traces if needed!
// local queue genericQ    : rt!generic

// ATL elements
model queue mOclModel        : atl!OclModel
model queue mOclModelElement : atl!OclModelElement

model queue mClassBinding    : gbind!ClassBinding

// Rename all OclModelElements not renamed yet
//   - This is not going to work with a 1:N binding with X ::= A, X
segment renameRest_EasyWay
	current_mm = params!BindingData.all_instances.first.boundMetamodelName

	forall o from mOclModelElement
		// TODO: Restrict to 1:1 class bindings (probably another pattern)
		forall cb from mClassBinding		
			o.^model.is_nil.if_false {
				o.^model.name.eq(current_mm).if_true {
				    cb.concept.name.eq(o.name).if_true {
						o.name = cb.concrete.first.name
					}
				}
			}
		end
	end	
end

segment modifyModel
	current_mm = params!BindingData.all_instances.first.boundMetamodelName
	concrete_mm = params!BindingData.all_instances.first.concreteMetamodelName
	
	forall m from mOclModel
	 where m.name.eq(current_mm)

	 m.name = concrete_mm

     container = m._refContainer
	end    
end
