@namespace(uri="http://genericity/types/atl", prefix="atl_types")
package atl_types;

//import "http://www.eclipse.org/emf/2002/Ecore";

abstract class Type {
	attr boolean[1] multivalued = false;

    transient attr Object[0..1] metamodelRef;

}

class OclUndefinedType extends Type {
   
}

abstract class PrimitiveType extends Type {
}

class BooleanType extends PrimitiveType {
	ref Metaclass[0..*] kindOfTypes;
}

class IntegerType extends PrimitiveType {
}

class StringType extends PrimitiveType {
}

class FloatType extends PrimitiveType {
}

class TupleType extends Type {
   val TupleAttribute[*] attributes;
}

class MapType extends Type {
   val Type[1] keyType;
   val Type[1] valueType;
}

class TupleAttribute {
   attr String[1] name;
   val Type[1] type;
}

class RefType extends Type {
   
}

class Unknown extends RefType {
   
}

class UnknownFeature extends ecore.EStructuralFeature {
   ref EClass[1] theContainingClass;
}

class EmptyCollection extends Type {
   
}

/*
class EnumLiteralType extends Type {
   ref EnumType[1] type;
   attr String[1] value;   
}
*/

class EnumType extends Type {
   attr String[1] name;
   ref EObject[1] eenum;      
}

class Metaclass extends RefType {
   attr String[1] name;
   attr boolean explicitOcurrence;
   ref EClass[1] klass;   

}

abstract class ReflectiveType extends Type {
   
}

class UnionType extends Type {
	val Type[*] possibleTypes;   
}

class ThisModuleType extends Type {
   
   
}

/**
 * This is to support oclType()
 */
class ReflectiveClass extends ReflectiveType {
   
}

abstract class CollectionType extends Type {
   ref Type[1] containedType;
}

class SequenceType extends CollectionType {
}

class SetType extends CollectionType {  
}


@namespace(uri="http://genericity/types/atl/annotations", prefix="atl_types_annotations")
package annotations {
  abstract class AtlAnnotation {
  }

  class HelperAnnotation extends AtlAnnotation {
    ref EObject helper;
	attr String[0..1] name;
	ref Type[1] type;
  }


  class BindingAnnotation extends AtlAnnotation {
    ref EObject rule;
	ref EObject binding;
	attr String[0..1] name;
	ref Type[1] sourceType;
	ref Type[1] targetType;
  }

  class ExpressionAnnotation extends AtlAnnotation {
    ref EObject expr;
	ref Type[1] type;
	
	// Reference to EStructuralFeature and the type of the static receptor
	ref EObject[0..1] usedFeature;
	ref EObject[0..1] receptorType;
	
  }

}

