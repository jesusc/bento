binding simple2petrinet {
	concept   PN  : "bento:/bento.trafolib.petrinet2matrix/PetriNet.ecore"
	metamodel PN2 : "3_no_arc_petri_net.ecore"
	
	class PTArc {
    	ref source : Place
    	ref "target" : Transition
    } init = 
		PN2!Transition.allInstances()->collect(t |
			t."in"->collect(src | #PTArc { source = src, "target" = t } )			
		)->flatten();

	class TPArc {
    	ref source : Place
    	ref "target" : Transition
    } init = 
		PN2!Transition.allInstances()->collect(t |
			t."out"->collect(tgt | #TPArc { source = t, "target" = tgt } )			
		)->flatten();
    
	
	class PetriNet to PetriNet
	class Place to Place
	class Transition to Transition
	class TransToPlaceArc to virtual TPArc 
	class PlaceToTransArc to virtual PTArc
	
	feature PetriNet.places = self.elems->select(e | e.oclIsKindOf(PN2!Place))
	feature PetriNet.transitions = self.elems->select(e | e.oclIsKindOf(PN2!Transition))

	feature PetriNet.arcs = PN!TransToPlaceArc.allInstances()->union(PN!PlaceToTransArc.allInstances())	

	feature PlaceToTransArc.weight = 1
	feature TransToPlaceArc.weight = 1
	
	feature TransToPlaceArc.source   = self.source
	feature TransToPlaceArc."target" = self."target"

	feature PlaceToTransArc.source   = self.source
	feature PlaceToTransArc."target" = self."target"
		
}