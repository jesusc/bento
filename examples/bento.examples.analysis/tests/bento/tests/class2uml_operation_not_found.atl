-- @path CD=/bento.examples.analysis/tests/bento/tests/ClassCD.ecore
-- @path UML=/bento.examples.analysis/tests/bento/tests/UML.ecore

module class2umlOperationNotFound;
create OUT : UML from IN : CD;

helper context CD!Classifier def : isPersistent() : Boolean = 
	if self.oclIsKindOf(UML!Class) then
		self.isPersistentNotExist()
	else
		false
	endif
;

rule model {
	from
		m : CD!Model ( m.name = 'myModel' )
	to 
		u : UML!Package (
			ownedElement <- 
				if m.classifiers.isEmpty() then
					Sequence { }
				else 
					if m.classifiers.size() = 1 then -- TODO: ERROR IN THE IF CONDITION
						Sequence { thisModule.model_2(m) }
					else
						-- m.classifiers->select(c | c.isPersistent())					
	
						m.classifiers->select(c|
							if c.name = 'Something' then
								c.isPersistent()
							else
								false
							endif
							
						)
						
						--						m.classifiers->select(c1 | 
--							m.classifiers->select(c2| c2 = c1)->select(c2 | 
--								if m.name = 'PersistentModel' then 
--									c1.isPersistent()
--								else 
--									c1
--								endif)					
--						)							
					endif
				endif
		)
}

lazy rule model_2 {
	from
		m : CD!Model ( m.name = 'myModel' )
	to 
		u : UML!Package (
			ownedElement <- m.classifiers->select(c | c.isPersistentNotFound())					

		)
}
