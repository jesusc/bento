
composite component GraphLayouts {
	uses "platform:/resource/genericity.benchmarks/components/layout/circle.gcomponent"  // circleLayout
	uses "platform:/resource/genericity.benchmarks/components/layout/organic.gcomponent" // organicLayout
		
	source concept Graph  : "Graph.ecore" // where concepts come from?, they could be shared...
	target concept Layout : "Layout.ecore"
	source model in : Graph
	target model out : Layout
	
	variants 
		+ layoutKind xor
			- circle
			- organic
	
	// TODO: apply should be something like "apply circle(bindGraph(graph))" 
	// Maybe we should be allowed to create bindings inline
	//compose xor 
	//	when circle  -> 
	//		apply  circleLayout(graph : id(Graph)) -> (layout : id(Layout))
	//	when organic -> 
	//		apply organicLayout(graph : id(Graph)) -> (layout : id(Layout)) 

	compose xor 
		when circle  -> 
			apply  circleLayout(in) -> (out)
		when organic -> 
			apply organicLayout(in) -> (out) 

		
	// Constraint: the last transformation in a component should produce a common target	
}